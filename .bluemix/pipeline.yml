--- 
stages: 
  - name: Build
    inputs: 
      - type: git
        branch: master
    triggers: 
      - type: commit
    jobs: 
      - name: Build
        type: builder
  - name: Deploy
    inputs: 
      - type: job
        stage: Build
        job: Build
    triggers: 
      - type: stage
    jobs: 
      - name: dev
        type: deployer
        script: |-
            #!/bin/bash -x
            CLOUDANT_NAME="node-red-shared-cloudant"
            ibmcloud cf push "${CF_APP}" --no-start
            ibmcloud cf set-env "${CF_APP}" NODE_RED_STORAGE_NAME "${CLOUDANT_NAME}"
            ibmcloud cf create-service cloudantNoSQLDB Lite "${CLOUDANT_NAME}"

            until [ "$RES" = "succeeded" ]
            do
                    RES=`ibmcloud cf service "${CLOUDANT_NAME}" | grep status | grep "create succeeded" | awk -F':' '{print $2}' | awk '{print $2}'`
            done

            ibmcloud cf bind-service "${CF_APP}" "${CLOUDANT_NAME}" -c '{"role":"Manager"}'

            RES=`ibmcloud resource search "service_name:speech-to-text"`
            if [ "${RES}" == "No resources found" ];then
              ibmcloud resource service-instance-create "TJBot-WatsonSTT" speech-to-text lite jp-tok
            fi

            RES=`ibmcloud resource search "service_name:text-to-speech"`
            if [  == "No resources found" ];then
              ibmcloud resource service-instance-create "TJBot-WatsonTTS" text-to-speech lite jp-tok
            fi
            
            RES=`ibmcloud resource search "service_name:watson-vision-combined"`
            if [ ${RES} == "No resources found"];then
              ibmcloud resource service-instance-create "TJBot-WatsonVR"  watson-vision-combined lite
            fi
            
            RES=`ibmcloud resource search "service_name:language-translator"`
            if [ "${RES}" == "No resources found"];then
              ibmcloud resource service-instance-create "TJBot-WatsonLT"  language-translator lite jp-tok
            fi
            
            # Start CF Application
            ibmcloud cf start "${CF_APP}"
            
            # View logs
            ibmcloud cf logs "${CF_APP}" --recent
            
            # test 
            ibmcloud resource service-instances
            
        target:
          region_id: ${CF_REGION_ID}
          organization: ${CF_ORGANIZATION}
          space: ${CF_SPACE}
          application: ${CF_APP}
          api_key: ${API_KEY}
